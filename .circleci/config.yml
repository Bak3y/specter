version: 2
jobs:
  test:
    working_directory: /go/src/github.com/shipt/specter
    docker:
      - image: circleci/golang:1.12
    environment:
      - GOCACHE: "/tmp/go/cache"
      - DEP_VERSION: 0.4.1
      - TEST_RESULTS: /tmp/test-results # path to where test results will be saved
      - GOMODULE: off #https://github.com/goreleaser/goreleaser/issues/1005
      #- GO111MODULE: off
    steps:
      - checkout
      - run: mkdir -p $TEST_RESULTS # create the test results directory
      - run: GO111MODULE=off go get github.com/jstemmer/go-junit-report
      - restore_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/shipt/specter/vendor
      - run:
          name: download-libraries
          command: |
            if [ ! -d /go/src/github.com/shipt/specter/vendor ]; then
                curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /go/bin/dep
                chmod +x /go/bin/dep
                /go/bin/dep ensure
            fi
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/shipt/specter/vendor
      - restore_cache:
          keys:
              - build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
          paths:
              - /tmp/go/cache
      - run:
          name: test
          command: |
            mkdir -p $GOCACHE
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            go test -p 6 -race ./... | tee ${TEST_RESULTS}/go-test.out
      - store_artifacts: # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/test-results
          destination: raw-test-output
      - store_test_results: # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/test-results
  build:
    working_directory: /go/src/github.com/shipt/specter
    docker:
      - image: circleci/golang:1.12
    environment:
      - GOCACHE: "/tmp/go/cache"
      - DEP_VERSION: 0.4.1
      - TEST_RESULTS: /tmp/test-results # path to where test results will be saved
    steps:
      - checkout
      - restore_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/shipt/specter/vendor
      - run:
          name: download-libraries
          command: |
            if [ ! -d /go/src/github.com/shipt/specter/vendor ]; then
                curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /go/bin/dep
                chmod +x /go/bin/dep
                /go/bin/dep ensure
            fi
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/shipt/specter/vendor
      - restore_cache:
          keys:
              - build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
          paths:
              - /tmp/go/cache
      - run:
          name: test
          command: |
            mkdir -p $GOCACHE
            go build -v ./cmd/specter/main.go
            go build -v ./cmd/specter-data/main.go
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_BUILD_NUM }}
          paths:
              - /tmp/go/cache
  release:
    working_directory: /go/src/github.com/shipt/specter
    docker:
      - image: circleci/golang:1.10
    environment:
      - GOCACHE: "/tmp/go/cache"
      - DEP_VERSION: 0.4.1
    steps:
      - checkout
      - restore_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/shipt/specter/vendor
      - run:
          name: download-libraries
          command: |
            if [ ! -d /go/src/github.com/shipt/specter/vendor ]; then
                curl -L -s https://github.com/golang/dep/releases/download/v${DEP_VERSION}/dep-linux-amd64 -o /go/bin/dep
                chmod +x /go/bin/dep
                /go/bin/dep ensure
            fi
      - save_cache:
          key: gopkg-{{ .Branch }}-{{ checksum "Gopkg.lock" }}
          paths:
              - /go/src/github.com/shipt/specter/vendor
      - restore_cache:
          keys:
              - build-cache-{{ .Branch }}-{{ .Environment.CIRCLE_PREVIOUS_BUILD_NUM }}
          paths:
              - /tmp/go/cache
      - run:
          name: install-and-run-goreleaser
          command: |
            wget https://github.com/goreleaser/goreleaser/releases/download/v0.116.0/goreleaser_Linux_x86_64.tar.gz
            mkdir goreleaser
            tar -zxvf goreleaser_Linux_x86_64.tar.gz -C goreleaser
            mv goreleaser/goreleaser /usr/local/bin/goreleaser
            goreleaser --skip-validate --rm-dist --debug
workflows:
  version: 2
  test_and_build:
    jobs:
      - test
      - build
  release:
    jobs:
      - test:
          requires:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - release:
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/